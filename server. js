/**
 * client-pulse-v2 â€” server.js
 * Express backend that exposes routes for clients, reminders, and analytics.
 * Uses Firestore if FIREBASE_SERVICE_ACCOUNT env is set; otherwise falls back to in-memory store.
 *
 * Start:
 *  - npm install
 *  - copy config.example.env -> .env and fill SMTP / FIREBASE keys if you want
 *  - npm start
 */

require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const path = require('path');
const cors = require('cors');

const clientRoutes = require('./routes/clientRoutes');
const reminderRoutes = require('./routes/reminderRoutes');
const analyticsRoutes = require('./routes/analyticsRoutes');

const app = express();
const PORT = process.env.PORT || 5000;

app.use(cors());
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, 'public')));

// API routes
app.use('/api/clients', clientRoutes);
app.use('/api/reminders', reminderRoutes);
app.use('/api/analytics', analyticsRoutes);

// export route for debugging / quick export
app.get('/api/export-all', async (req, res) => {
  const helper = require('./utils/dataHelper');
  const dump = await helper.exportAll();
  res.json(dump);
});

// serve UI fallback (if frontend added)
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// global error handler
app.use((err, req, res, next) => {
  console.error('Unhandled error:', err);
  res.status(500).json({ error: 'Server error', message: err.message || String(err) });
});

app.listen(PORT, () => {
  console.log(`ðŸ”” client-pulse-v2 running on port ${PORT}`);
});
